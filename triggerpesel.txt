-- FUNKCJA SPRAWDZAJĄCA POPRAWNOŚĆ NUMERU PESEL (SUMA KONTROLNA)
GO
CREATE FUNCTION CheckPESEL ( @PESEL VARCHAR(256) )
RETURNS BIT
AS
	BEGIN
	DECLARE @sum INT
	DECLARE @controlSum INT
	DECLARE @result BIT

	SET @controlSum = CAST( SUBSTRING(@PESEL, 11, 1) AS INT)

	SET @sum = CAST( SUBSTRING(@PESEL, 1, 1) AS INT) -- 1
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 2, 1) AS INT) * 3 ) % 10 -- 3
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 3, 1) AS INT) * 7 ) % 10 -- 7
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 4, 1) AS INT) * 9 ) % 10 -- 9
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 5, 1) AS INT) * 1 ) % 10 -- 1
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 6, 1) AS INT) * 3 ) % 10 -- 3
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 7, 1) AS INT) * 7 ) % 10 -- 7
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 8, 1) AS INT) * 9 ) % 10 -- 9
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 9, 1) AS INT) * 1 ) % 10 -- 1
	SET @sum = ( @sum + CAST( SUBSTRING(@PESEL, 10, 1) AS INT) * 3 ) % 10 -- 3


	SET @sum = 10 - (@sum % 10)

	IF @sum = @controlSum
		SET @result=1
	ELSE
		SET @result=0

	RETURN @result
	END
GO


-- WYZWALACZ INSTEAD OF INSERT
-- NA TABELI PACJENCI
-- SPRAWDZAJĄCY DODAWANE DANE DO TABELI PACJENCI- POPRAWNOŚĆ/ZGODNOŚĆ PESELA I DATY

GO
CREATE TRIGGER TR_INSERT_Pacjenci ON Pacjenci
INSTEAD OF INSERT
AS
	DECLARE @TEXT NVARCHAR(256)
	DECLARE @unique BIT
	DECLARE @pesel VARCHAR(256)
	SET @unique = 1

	DECLARE ITERATOR CURSOR FOR
	SELECT Imie, Nazwisko, Plec, DataUrodzenia, Pesel, Palenie, Wzrost FROM inserted
	OPEN Iterator
	DECLARE @imie VARCHAR(256)
	DECLARE @nazwisko VARCHAR(256)
	DECLARE @plec VARCHAR(256)
	DECLARE @dataurodzenia DATE
	DECLARE @palenie BIT
	DECLARE @wzrost INT

	DECLARE @peselDateGood BIT
	DECLARE @peselGood BIT

	

	FETCH Iterator INTO @imie, @nazwisko, @plec, @dataurodzenia, @pesel, @palenie, @wzrost
	WHILE (@@FETCH_STATUS = 0 ) BEGIN

		SET @peselDateGood = 1
		SET @peselGood = 1
		SET @unique = 1

		-- sprawdzenie czy pesel jest unique
		IF @pesel IN ( SELECT Pesel FROM Pacjenci ) BEGIN
			SET @TEXT = FORMATMESSAGE ('Nie dodano pacjenta Pesel: %s. Pesel jest już w bazie danych',@pesel)
			SET @unique = 0
		END
		
		-- sprawdzenie daty i daty w peselu
		IF ( @pesel IS NOT NULL ) AND ( @dataurodzenia IS NOT NULL ) BEGIN
			DECLARE @peselday VARCHAR(2)
			DECLARE @peselmonth VARCHAR(2)
			DECLARE @peselyear VARCHAR(256)
			DECLARE @peselmonthright CHAR(1)
			DECLARE @peselmonthleft CHAR(1)
			DECLARE @peselcentury CHAR(2)

			SET @peselday = SUBSTRING(@pesel, 5, 2)

			SET @peselmonthleft = SUBSTRING(@pesel, 3, 1)

			IF @peselmonthleft IN (0, 1)
				SET @peselcentury = '19'
			IF @peselmonthleft IN (2, 3)
				SET @peselcentury = '20'
			IF @peselmonthleft IN (4, 5)
				SET @peselcentury = '21'

			IF @peselmonthleft = 2
				SET @peselmonthleft = '0'
			IF @peselmonthleft = 3
				SET @peselmonthleft = '1'
			IF @peselmonthleft = 4
				SET @peselmonthleft = '0'
			IF @peselmonthleft = 5
				SET @peselmonthleft = '1'

			SET @peselmonthright = SUBSTRING(@pesel, 4, 1)


			SET @peselmonth = @peselmonthleft + @peselmonthright

			SET @peselyear = SUBSTRING(@pesel, 1, 2)

			DECLARE @peseldate VARCHAR(256)
			SET @peseldate = @peselcentury + @peselyear + '-' + @peselmonth + '-' + @peselday

			DECLARE @datedate VARCHAR(256)
			SET @datedate = SUBSTRING( CAST(@dataurodzenia as char), 1, 11)

			--PRINT @datedate
			--PRINT @peseldate
			IF @datedate = @peseldate
				SET @peselDateGood = 1
			ELSE
				SET @peselDateGood = 0
		END

		IF (@pesel IS NOT NULL ) BEGIN
			-- sprawwdzenie pesela
			--PRINT dbo.CheckPesel(@pesel)
			IF dbo.CheckPesel(@pesel) = 0
				SET @peselGood = 0
		END

		IF (@peselDateGood = 1 AND @peselGood = 1 AND @unique = 1) BEGIN
		INSERT INTO Pacjenci VALUES (@imie, @nazwisko, @plec, @dataurodzenia, @pesel, @palenie, @wzrost)

		SET @TEXT = FORMATMESSAGE (
		'Dodano pacjenta %s %s Pesel: %s Data Urodzenia: %s',
		@imie, @nazwisko, @pesel, SUBSTRING(CAST(@dataurodzenia as char), 1, 10)
		)
		END
		IF (@peselGood = 0) BEGIN
		SET @TEXT = FORMATMESSAGE (
		'Nie dodano pacjenta %s %s. Błędny Pesel: %s',
		@imie, @nazwisko, @pesel)
		END
		IF (@peselDateGood = 0) BEGIN
		SET @TEXT = FORMATMESSAGE (
		'Nie dodano pacjenta %s %s Pesel: %s Data Urodzenia: %s, błędny PESEL lub data urodzenia',
		@imie, @nazwisko, @pesel, SUBSTRING(CAST(@dataurodzenia as char), 1, 10)
		)
		END
		
	PRINT @TEXT
	FETCH Iterator INTO @imie, @nazwisko, @plec, @dataurodzenia, @pesel, @palenie, @wzrost
END
CLOSE Iterator
DEALLOCATE Iterator
GO

-- WYZWALACZ INSTEAD OF UPDATE
-- NA TABELI PACJENCI
-- SPRAWDZAJĄCY MODYFIKOWANE DANE DO TABELI PACJENCI- POPRAWNOŚĆ/ZGODNOŚĆ PESELA I DATY

GO
CREATE TRIGGER TR_UPDATE_Pacjenci ON Pacjenci
INSTEAD OF UPDATE
AS
	DECLARE ITERATOR CURSOR FOR
	SELECT ID, Imie, Nazwisko, Plec, DataUrodzenia, Pesel, Palenie, Wzrost FROM inserted
	OPEN Iterator
	DECLARE @id INT
	DECLARE @imie VARCHAR(256)
	DECLARE @nazwisko VARCHAR(256)
	DECLARE @plec VARCHAR(256)
	DECLARE @dataurodzenia DATE
	DECLARE @pesel VARCHAR(256)
	DECLARE @palenie BIT
	DECLARE @wzrost INT

	DECLARE @peselDateGood BIT

	DECLARE @TEXT NVARCHAR(256)

	--SET IDENTITY_INSERT Pacjenci ON

	FETCH Iterator INTO @id, @imie, @nazwisko, @plec, @dataurodzenia, @pesel, @palenie, @wzrost
	WHILE (@@FETCH_STATUS = 0 ) BEGIN
		
		-- sprawdzenie daty i daty w peselu
		DECLARE @peselday VARCHAR(2)
		DECLARE @peselmonth VARCHAR(2)
		DECLARE @peselyear VARCHAR(256)
		DECLARE @peselmonthright CHAR(1)
		DECLARE @peselmonthleft CHAR(1)
		DECLARE @peselcentury CHAR(2)

		SET @peselday = SUBSTRING(@pesel, 5, 2)

		SET @peselmonthleft = SUBSTRING(@pesel, 3, 1)

		IF @peselmonthleft IN (0, 1)
			SET @peselcentury = '19'
		IF @peselmonthleft IN (2, 3)
			SET @peselcentury = '20'
		IF @peselmonthleft IN (4, 5)
			SET @peselcentury = '21'

		IF @peselmonthleft = 2
			SET @peselmonthleft = '0'
		IF @peselmonthleft = 3
			SET @peselmonthleft = '1'
		IF @peselmonthleft = 4
			SET @peselmonthleft = '0'
		IF @peselmonthleft = 5
			SET @peselmonthleft = '1'

		SET @peselmonthright = SUBSTRING(@pesel, 4, 1)


		SET @peselmonth = @peselmonthleft + @peselmonthright

		SET @peselyear = SUBSTRING(@pesel, 1, 2)

		DECLARE @peseldate VARCHAR(256)
		SET @peseldate = @peselcentury + @peselyear + '-' + @peselmonth + '-' + @peselday

		DECLARE @datedate VARCHAR(256)
		SET @datedate = SUBSTRING( CAST(@dataurodzenia as char), 1, 11)

		--PRINT @datedate
		--PRINT @peseldate
		IF @datedate = @peseldate
			SET @peselDateGood = 1
		ELSE
			SET @peselDateGood = 0

		-- sprawwdzenie pesela
		--PRINT dbo.CheckPesel(@pesel)
		DECLARE @peselGood BIT
		IF dbo.CheckPesel(@pesel) = 1
			SET @peselGood = 1
		ELSE
			SET @peselGood = 0

		IF (@peselDateGood = 1 AND @peselGood = 1) BEGIN

		UPDATE Pacjenci
		SET Imie = @imie, Nazwisko = @nazwisko, Plec = @plec, DataUrodzenia = @dataurodzenia, Pesel = @pesel, Palenie = @palenie, Wzrost = @wzrost
		WHERE Pacjenci.ID = @id

		SET @TEXT = FORMATMESSAGE (
		'Zmodyfikowano pacjenta %s %s Pesel: %s Data Urodzenia: %s',
		@imie, @nazwisko, @pesel, SUBSTRING(CAST(@dataurodzenia as char), 1, 10)
		)
		END
		IF (@peselGood = 0) BEGIN
		SET @TEXT = FORMATMESSAGE (
		'Nie zmodyfikowano pacjenta %s %s. Błędny Pesel: %s',
		@imie, @nazwisko, @pesel)

		END
		IF (@peselDateGood = 0) BEGIN
		SET @TEXT = FORMATMESSAGE (
		'Nie zmodyfikowano pacjenta %s %s Pesel: %s Data Urodzenia: %s, błędny PESEL lub data urodzenia',
		@imie, @nazwisko, @pesel, SUBSTRING(CAST(@dataurodzenia as char), 1, 10)
		)
		END
		
	PRINT @TEXT
	FETCH Iterator INTO @id, @imie, @nazwisko, @plec, @dataurodzenia, @pesel, @palenie, @wzrost
END
CLOSE Iterator
DEALLOCATE Iterator
GO


-- WYZWALACZ INSTEAD OF INSERT
-- NA TABELI PRACOWNICY
-- SPRAWDZAJĄCY MODYFIKOWANE DANE DO TABELI PACJENCI- POPRAWNOŚĆ PESELA


GO
CREATE TRIGGER TR_INSERT_Pracownicy ON Pracownicy
INSTEAD OF INSERT
AS
	DECLARE @TEXT NVARCHAR(256)
	

	DECLARE ITERATOR CURSOR FOR
	SELECT Imie, Nazwisko, Plec, Pesel, Stanowisko, StopienNaukowy, Wyplata, ID_typZatrudnienia, DataZatrudnienia, NrKontaktowy, Adres, Miasto FROM inserted
	OPEN Iterator
	DECLARE @imie VARCHAR(256)
	DECLARE @nazwisko VARCHAR(256)
	DECLARE @plec VARCHAR(256)
	DECLARE @stanowisko VARCHAR(256)
	DECLARE @pesel VARCHAR(256)
	DECLARE @dataurodzenia DATE
	DECLARE @stopienNaukowy VARCHAR(256)
	DECLARE @wyplata MONEY
	DECLARE @typZatrudnienia INT
	DECLARE @dataZatrudnienia DATE
	DECLARE @nrKontaktowy VARCHAR(256)
	DECLARE @adres VARCHAR(256)
	DECLARE @miasto VARCHAR(256)

	DECLARE @unique BIT
	DECLARE @peselGood BIT
	

	FETCH Iterator INTO @imie, @nazwisko, @plec, @pesel, @stanowisko, @stopienNaukowy, @wyplata, @typZatrudnienia, @dataZatrudnienia, @nrKontaktowy, @adres, @miasto
	WHILE (@@FETCH_STATUS = 0 ) BEGIN

		SET @peselGood = 1
		SET @unique = 1

		-- sprawdzenie czy pesel jest unique
		IF @pesel IN ( SELECT Pesel FROM Pracownicy ) BEGIN
			SET @TEXT = FORMATMESSAGE ('Nie dodano pracownika Pesel: %s. Pesel jest już w bazie danych',@pesel)
			SET @unique = 0
		END

		IF (@pesel IS NOT NULL ) BEGIN
			IF dbo.CheckPesel(@pesel) = 0
				SET @peselGood = 0
		END

		IF ( @peselGood = 1 AND @unique = 1) BEGIN
		INSERT INTO Pracownicy VALUES (@imie, @nazwisko, @plec, @pesel, @stanowisko, @stopienNaukowy, @wyplata, @typZatrudnienia, @dataZatrudnienia, @nrKontaktowy, @adres, @miasto)

		SET @TEXT = FORMATMESSAGE (
		'Dodano pracownika %s %s Pesel: %s',
		@imie, @nazwisko, @pesel
		)
		END
		IF (@peselGood = 0) BEGIN
		SET @TEXT = FORMATMESSAGE (
		'Nie dodano pracownika %s %s. Błędny Pesel: %s',
		@imie, @nazwisko, @pesel)
		END
		
	PRINT @TEXT
	FETCH Iterator INTO @imie, @nazwisko, @plec, @pesel, @stanowisko, @stopienNaukowy, @wyplata, @typZatrudnienia, @dataZatrudnienia, @nrKontaktowy, @adres, @miasto
END
CLOSE Iterator
DEALLOCATE Iterator
GO



-- WYZWALACZ INSTEAD OF UPDATE
-- NA TABELI PRACOWNICY
-- SPRAWDZAJĄCY MODYFIKOWANE DANE DO TABELI PACJENCI- POPRAWNOŚĆ PESELA
GO
CREATE TRIGGER TR_UPDATE_Pracownicy ON Pracownicy
INSTEAD OF UPDATE
AS
	DECLARE @TEXT VARCHAR(256)
	DECLARE ITERATOR CURSOR FOR
	SELECT ID, Imie, Nazwisko, Plec, Pesel, Stanowisko, StopienNaukowy, Wyplata, ID_typZatrudnienia, DataZatrudnienia, NrKontaktowy, Adres, Miasto FROM inserted
	OPEN Iterator
	DECLARE @id INT
	DECLARE @imie VARCHAR(256)
	DECLARE @nazwisko VARCHAR(256)
	DECLARE @plec VARCHAR(256)
	DECLARE @stanowisko VARCHAR(256)
	DECLARE @pesel VARCHAR(256)
	DECLARE @dataurodzenia DATE
	DECLARE @stopienNaukowy VARCHAR(256)
	DECLARE @wyplata MONEY
	DECLARE @typZatrudnienia INT
	DECLARE @dataZatrudnienia DATE
	DECLARE @nrKontaktowy VARCHAR(256)
	DECLARE @adres VARCHAR(256)
	DECLARE @miasto VARCHAR(256)

	DECLARE @peselGood BIT

	FETCH Iterator INTO @id, @imie, @nazwisko, @plec, @pesel, @stanowisko, @stopienNaukowy, @wyplata, @typZatrudnienia, @dataZatrudnienia, @nrKontaktowy, @adres, @miasto
	WHILE (@@FETCH_STATUS = 0 ) BEGIN

		-- sprawwdzenie pesela
		IF dbo.CheckPesel(@pesel) = 1
			SET @peselGood = 1
		ELSE
			SET @peselGood = 0

		PRINT (@peselGood)

		IF @peselGood = 1 BEGIN
			UPDATE Pracownicy
			SET Imie = @imie, Nazwisko = @nazwisko, Plec = @plec, Pesel = @pesel, Stanowisko = @stanowisko, StopienNaukowy = @stopienNaukowy, Wyplata = @wyplata,
			ID_typZatrudnienia = @typZatrudnienia, DataZatrudnienia = @dataZatrudnienia, NrKontaktowy = @nrKontaktowy, Adres = @adres, Miasto = @miasto
			WHERE Pracownicy.ID = @id

			SET @TEXT = FORMATMESSAGE (
			'Zmodyfikowano pracownika %s %s Pesel: %s',
			@imie, @nazwisko, @pesel
			)
		END
		IF @peselGood = 0 BEGIN
			SET @TEXT = FORMATMESSAGE (
			'Nie zmodyfikowano pracownika %s %s. Błędny Pesel: %s',
			@imie, @nazwisko, @pesel)
		END
		
	PRINT @TEXT
	FETCH Iterator INTO @id, @imie, @nazwisko, @plec, @pesel, @stanowisko, @stopienNaukowy, @wyplata, @typZatrudnienia, @dataZatrudnienia, @nrKontaktowy, @adres, @miasto
END
CLOSE Iterator
DEALLOCATE Iterator
GO
